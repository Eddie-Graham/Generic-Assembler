architecture:

MIPS


registers:

v0 2H
v1 3H

a0 4H
a1 5H
a2 6H
a3 7H

$t0 8H
$t1 9H
$t2 10H
$t3 11H
$t4 12H
$t5 13H
$t6 14H
$t7 15H

s0 16H
s1 17H
s2 18H
s3 19H
s4 20H
s5 21H
s6 22H
s7 23H

t8 24H
t9 25H


instructionformat:

R-type: opcode(6) rs(5) rt(5) rd(5) shamt(5) func(6)

I-type: opcode(6) rs(5) rt(5) immediate(16)

J-type: opcode(6) address(26)

lw:	generic(32)


assemblyoptree:

statement : label? mnem op*

op : imm
op : reg
op : mem
op : LABEL

imm : INT

reg : name

mem : 0xHEX ;fix

mem : imm(reg)

name : "$t0"
name : "$t1"
name : "$t2"
name : "$t3"
name : "$t4"
name : "$t5"
name : "$t6"
name : "$t7"

mnem : "ADD"
mnem : "SB"
mnem : "LUI"
mnem : "LW"
mnem : "ANDI"
mnem : "ADDI"
mnem : "AND"
mnem : "LB"

label: LABEL


mnemonicdata:

ADD
	opcode=000000, func=100000, shamt=00000

	mnem reg, reg, reg
		mnem rd rs rt
		-- 
		R-type
		
ADDI
	opcode=001000

	mnem reg, reg, imm
		mnem rt rs immediate
		-- 
		I-type
		
AND
	opcode=000000, shamt=00000, func=100100
	
	mnem reg, reg, reg
		mnem rd rs rt
		-- 
		R-type
		
		
LB
	opcode=100000
	
	mnem reg, mem
		mnem rt immediate(rs)
		-- 
		I-type
		
LW	
	opcode = 100011

	mnem reg, LABEL
		mnem rt immediate
		generic = 00111100000000010001000000000001, rs =1
		lw I-type
		
		
endian:

big


minaddressableunit:

8





